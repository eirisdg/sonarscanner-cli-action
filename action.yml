name: 'SonarScanner CLI Action'
description: >-
  Cross-platform GitHub Action for SonarQube/SonarCloud analysis with native SonarScanner CLI execution.
  Supports automatic language detection, comprehensive parameter configuration, and analysis controls.
author: 'Mario Adrián Domínguez González de Eiris'

branding:
  icon: 'search'
  color: 'purple'

inputs:
  # Core Parameters
  sonar-host-url:
    description: 'SonarQube server URL'
    required: true
  sonar-token:
    description: 'Authentication token for SonarQube'
    required: true
  sonar-project-key:
    description: 'Unique project key in SonarQube'
    required: true
  sonar-project-name:
    description: 'Project name'
    required: false
    default: ${{ github.repository }}
  sonar-project-version:
    description: 'Project version'
    required: false
    default: '1.0'
  sonar-sources:
    description: 'Source code directories'
    required: false
    default: '.'
  sonar-tests:
    description: 'Test source directories'
    required: false
  sonar-exclusions:
    description: 'Files/directories to exclude'
    required: false
  sonar-inclusions:
    description: 'Files/directories to include specifically'
    required: false
  sonar-encoding:
    description: 'Source file encoding'
    required: false
    default: 'UTF-8'
  sonar-scanner-version:
    description: 'SonarScanner CLI version to use'
    required: false
    default: '7.2.0.5079'
  working-directory:
    description: 'Working directory'
    required: false
    default: '.'
  
  # Branch & Pull Request Analysis
  sonar-organization:
    description: 'Organization in SonarCloud'
    required: false
  sonar-branch-name:
    description: 'Name of the branch to analyze'
    required: false
  sonar-pull-request-key:
    description: 'Pull Request number'
    required: false
  sonar-pull-request-branch:
    description: 'Pull Request branch'
    required: false
  sonar-pull-request-base:
    description: 'Pull Request base branch'
    required: false
  
  # Analysis Controls
  sonar-verbose:
    description: 'Enable verbose logging (equivalent to -X,--debug)'
    required: false
    default: 'false'
  sonar-log-level:
    description: 'Log level (INFO, DEBUG)'
    required: false
    default: 'INFO'
  enable-jacoco:
    description: 'Enable JaCoCo coverage analysis (auto-detects reports when enabled)'
    required: false
    default: 'true'
  enable-eslint:
    description: 'Enable ESLint analysis integration (auto-detects configuration when enabled)'
    required: false
    default: 'true'
  enable-hadolint:
    description: 'Enable Hadolint Docker linting (auto-detects Dockerfile when enabled)'
    required: false
    default: 'true'
  
  # Custom Arguments
  extra-args:
    description: 'Additional arguments for sonar-scanner'
    required: false

outputs:
  sonar-scanner-version:
    description: 'The version of SonarScanner CLI that was used'
    value: ${{ steps.analyze.outputs.version }}
  sonar-scanner-path:
    description: 'Path to the SonarScanner CLI installation'
    value: ${{ steps.analyze.outputs.path }}
  analysis-result:
    description: 'Analysis result status'
    value: ${{ steps.analyze.outputs.result }}

runs:
  using: 'composite'
  steps:
    - name: 'Detect platform'
      id: platform
      shell: bash
      run: |
        case "${{ runner.os }}" in
          Linux)
            echo "os=linux" >> $GITHUB_OUTPUT
            echo "script=run-sonar-analysis.sh" >> $GITHUB_OUTPUT
            echo "shell=bash" >> $GITHUB_OUTPUT
            ;;
          macOS)
            echo "os=macos" >> $GITHUB_OUTPUT
            echo "script=run-sonar-analysis.sh" >> $GITHUB_OUTPUT
            echo "shell=bash" >> $GITHUB_OUTPUT
            ;;
          Windows)
            echo "os=windows" >> $GITHUB_OUTPUT
            echo "script=run-sonar-analysis.ps1" >> $GITHUB_OUTPUT
            echo "shell=pwsh" >> $GITHUB_OUTPUT
            ;;
          *)
            echo "::error::Unsupported operating system: ${{ runner.os }}"
            exit 1
            ;;
        esac

    - name: 'Cache SonarScanner CLI'
      uses: actions/cache@v4
      with:
        path: |
          ~/.sonar-scanner
          ~/AppData/Local/SonarScanner
        key: >-
          sonar-scanner-${{ steps.platform.outputs.os }}-${{ inputs.sonar-scanner-version }}
        restore-keys: |
          sonar-scanner-${{ steps.platform.outputs.os }}-

    - name: 'Run SonarQube Analysis'
      id: analyze
      shell: ${{ steps.platform.outputs.shell }}
      working-directory: ${{ inputs.working-directory }}
      env:
        # Core parameters
        SONAR_HOST_URL: ${{ inputs.sonar-host-url }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_PROJECT_KEY: ${{ inputs.sonar-project-key }}
        SONAR_PROJECT_NAME: ${{ inputs.sonar-project-name }}
        SONAR_PROJECT_VERSION: ${{ inputs.sonar-project-version }}
        SONAR_SOURCES: ${{ inputs.sonar-sources }}
        SONAR_TESTS: ${{ inputs.sonar-tests }}
        SONAR_EXCLUSIONS: ${{ inputs.sonar-exclusions }}
        SONAR_INCLUSIONS: ${{ inputs.sonar-inclusions }}
        SONAR_ENCODING: ${{ inputs.sonar-encoding }}
        SONAR_SCANNER_VERSION: ${{ inputs.sonar-scanner-version }}
        
        # Branch & PR parameters
        SONAR_ORGANIZATION: ${{ inputs.sonar-organization }}
        SONAR_BRANCH_NAME: ${{ inputs.sonar-branch-name }}
        SONAR_PULL_REQUEST_KEY: ${{ inputs.sonar-pull-request-key }}
        SONAR_PULL_REQUEST_BRANCH: ${{ inputs.sonar-pull-request-branch }}
        SONAR_PULL_REQUEST_BASE: ${{ inputs.sonar-pull-request-base }}
        
        # Analysis controls
        SONAR_VERBOSE: ${{ inputs.sonar-verbose }}
        SONAR_LOG_LEVEL: ${{ inputs.sonar-log-level }}
        ENABLE_JACOCO: ${{ inputs.enable-jacoco }}
        ENABLE_ESLINT: ${{ inputs.enable-eslint }}
        ENABLE_HADOLINT: ${{ inputs.enable-hadolint }}
        
        # Custom arguments
        EXTRA_ARGS: ${{ inputs.extra-args }}
        
        # GitHub context
        GITHUB_TOKEN: ${{ github.token }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_PR_NUMBER: ${{ github.event.number }}
        GITHUB_HEAD_REF: ${{ github.head_ref }}
        GITHUB_BASE_REF: ${{ github.base_ref }}
        GITHUB_REF_NAME: ${{ github.ref_name }}
        
        RUNNER_OS: ${{ runner.os }}
      run: >-
        ${{ github.action_path }}/scripts/${{ steps.platform.outputs.script }}
