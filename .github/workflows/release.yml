name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      
    - name: Validate tag format
      if: github.event_name == 'push'
      run: |
        tag_name=${GITHUB_REF#refs/tags/}
        if [[ ! $tag_name =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "‚ùå Invalid tag format: $tag_name"
          echo "Expected format: v1.0.0"
          exit 1
        fi
        echo "‚úÖ Tag format is valid: $tag_name"
        
    - name: Validate action.yml
      run: |
        python -c "import yaml; yaml.safe_load(open('action.yml'))"
        echo "‚úÖ action.yml is valid"

  test:
    name: Run Tests
    uses: ./.github/workflows/ci.yml

  release:
    name: Create Release
    needs: [validate, test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          version="${{ github.event.inputs.version }}"
        else
          version=${GITHUB_REF#refs/tags/}
        fi
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "Version: $version"

    - name: Generate changelog
      id: changelog
      run: |
        # Generate changelog from commits since last tag
        previous_tag=$(git describe --abbrev=0 --tags HEAD~1 2>/dev/null || echo "")
        
        if [ -n "$previous_tag" ]; then
          echo "## Changes since $previous_tag" > changelog.md
          git log --pretty=format:"* %s (%h)" $previous_tag..HEAD >> changelog.md
        else
          echo "## Initial Release" > changelog.md
          echo "* First release of SonarScanner CLI Action" >> changelog.md
        fi
        
        echo "Generated changelog:"
        cat changelog.md

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: Release ${{ steps.version.outputs.version }}
        body_path: changelog.md
        draft: false
        prerelease: false

    - name: Update major version tag
      run: |
        version=${{ steps.version.outputs.version }}
        major_version=$(echo $version | cut -d. -f1)
        
        # Create or update major version tag (e.g., v1 for v1.0.0)
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -f $major_version
        git push origin $major_version --force

  publish-marketplace:
    name: Publish to Marketplace
    needs: [validate, test, release]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Validate marketplace requirements
      run: |
        # Check required files exist
        required_files=("action.yml" "README.md" "LICENSE")
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "‚ùå Required file missing: $file"
            exit 1
          fi
        done
        
        # Check action.yml has required fields
        if ! grep -q "name:" action.yml; then
          echo "‚ùå action.yml missing name field"
          exit 1
        fi
        
        if ! grep -q "description:" action.yml; then
          echo "‚ùå action.yml missing description field"
          exit 1
        fi
        
        if ! grep -q "branding:" action.yml; then
          echo "‚ùå action.yml missing branding field"
          exit 1
        fi
        
        echo "‚úÖ All marketplace requirements validated"

    - name: Notify marketplace submission
      run: |
        echo "üéâ Release created successfully!"
        echo "üì¶ To publish to GitHub Marketplace:"
        echo "1. Go to https://github.com/${{ github.repository }}/releases"
        echo "2. Edit the release"
        echo "3. Check 'Publish this Action to the GitHub Marketplace'"
        echo "4. Follow the marketplace guidelines"
        echo ""
        echo "üìã Marketplace Checklist:"
        echo "‚úÖ Action follows naming conventions"
        echo "‚úÖ README includes usage examples"
        echo "‚úÖ action.yml includes proper branding"
        echo "‚úÖ License included"
        echo "‚úÖ Tests passing"