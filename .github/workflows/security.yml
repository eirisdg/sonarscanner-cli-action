name: "Security & Linting"

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '30 1 * * 1'  # Weekly on Mondays at 1:30 AM UTC

jobs:
  detect-languages:
    name: Detect languages (for CodeQL)
    runs-on: ubuntu-latest
    outputs:
      languages: ${{ steps.set.outputs.languages }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect repository languages
        id: set
        run: |
          out="[]"
          if [ -f package.json ]; then out='["javascript"]'; fi
          if [ -f requirements.txt ] || [ -f setup.py ]; then
            if [ "$out" = "[]" ]; then out='["python"]'; else out=$(echo "$out" | sed 's/]$/, "python"]/'); fi
          fi
          if [ -f pom.xml ] || [ -f build.gradle ]; then
            if [ "$out" = "[]" ]; then out='["java"]'; else out=$(echo "$out" | sed 's/]$/, "java"]/'); fi
          fi
          echo "languages=$out" >> $GITHUB_OUTPUT

  shellcheck:
    name: ShellCheck (Bash lint)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run ShellCheck on scripts
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          scandir: './scripts'

  psscriptanalyzer:
    name: PowerShell Lint (PSScriptAnalyzer)
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PSScriptAnalyzer
        shell: pwsh
        run: |
          Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser -AllowClobber

      - name: Run PSScriptAnalyzer over repository
        shell: pwsh
        run: |
          Import-Module PSScriptAnalyzer
          $errors = Invoke-ScriptAnalyzer -Path . -Recurse -Severity Error
          if ($errors) {
            Write-Output "PSScriptAnalyzer found errors"
            $errors | Format-Table -AutoSize
            exit 1
          }

  codeql:
    name: CodeQL Analysis (conditional)
    needs: detect-languages
    if: needs.detect-languages.outputs.languages != '[]'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ fromJson(needs.detect-languages.outputs.languages) }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Dependency Review
      uses: actions/dependency-review-action@v4

  secrets-scan:
    name: Secrets Scanning
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified